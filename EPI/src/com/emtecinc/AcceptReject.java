/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.emtecinc;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Randall.Miller
 */
public class AcceptReject extends javax.swing.JDialog {
    JTable tblMain;
    /**
     * Creates new form AcceptReject
     */
    public AcceptReject(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //populateJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAndOr = new javax.swing.ButtonGroup();
        pnlAndOr = new javax.swing.JPanel();
        rblAnd = new javax.swing.JRadioButton();
        rblOr = new javax.swing.JRadioButton();
        lblCol = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccRej = new javax.swing.JTable();
        btnNextField = new javax.swing.JButton();
        btnPrevField1 = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bgAndOr.add(rblAnd);
        rblAnd.setText("And");

        bgAndOr.add(rblOr);
        rblOr.setText("Or");

        javax.swing.GroupLayout pnlAndOrLayout = new javax.swing.GroupLayout(pnlAndOr);
        pnlAndOr.setLayout(pnlAndOrLayout);
        pnlAndOrLayout.setHorizontalGroup(
            pnlAndOrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAndOrLayout.createSequentialGroup()
                .addComponent(rblOr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rblAnd)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlAndOrLayout.setVerticalGroup(
            pnlAndOrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAndOrLayout.createSequentialGroup()
                .addGroup(pnlAndOrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rblOr)
                    .addComponent(rblAnd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCol.setText("Column: ");

        tblAccRej.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<HTML>Accept<BR>Reject</HTML>", "Type", "Criteria", "Condition", "<HTML>Case<BR>Sensitive<HTML>"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblAccRej.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAccRej);

        btnNextField.setText("Next Field");
        btnNextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextFieldActionPerformed(evt);
            }
        });

        btnPrevField1.setText("Prev Field");
        btnPrevField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevField1ActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlAndOr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCol)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrevField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNextField)
                        .addGap(64, 64, 64))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCol)
                .addGap(3, 3, 3)
                .addComponent(pnlAndOr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNextField)
                    .addComponent(btnPrevField1)
                    .addComponent(btnAdd)
                    .addComponent(btnSave)
                    .addComponent(btnRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        System.out.println(Arrays.toString(((PBCSAdmin) this.getParent()).dlManager.hmAcceptRejectItems.entrySet().toArray()));
        //this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void moveSelectionMainTbl(){
        //tblMain = ((PBCSAdmin) this.getParent()).getMainTable();
        if (tblMain.getSelectedColumn() == 0){
            btnPrevField1.setEnabled(false);
        } else {
            btnPrevField1.setEnabled(true);
        }
        
        if (tblMain.getSelectedColumn() == tblMain.getColumnCount() - 1){
            btnNextField.setEnabled(false);
        } else {
            btnNextField.setEnabled(true);
        }
        ((PBCSAdmin) this.getParent()).updateColProps();
    }
    private void btnNextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextFieldActionPerformed
        // TODO add your handling code here:
        tblMain.setColumnSelectionInterval(tblMain.getSelectedColumn() + 1, tblMain.getSelectedColumn() + 1);
        ((PBCSAdmin) this.getParent()).dlManager.getAcceptRejectItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn(), tblMain.getColumnCount());
        populateJTable(false);
        //((PBCSAdmin) this.getParent()).dlManager.saveFindReplaceItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn());
        moveSelectionMainTbl();
    }//GEN-LAST:event_btnNextFieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        tblMain = ((PBCSAdmin) this.getParent()).getMainTable();
        if (((PBCSAdmin) this.getParent()).dlManager.hmAcceptRejectItems.isEmpty()) {
            populateJTable(true);
        } else {
            ((PBCSAdmin) this.getParent()).dlManager.getAcceptRejectItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn(), tblMain.getColumnCount());
            populateJTable(false);
        }
        moveSelectionMainTbl();
    }//GEN-LAST:event_formWindowOpened

    private void btnPrevField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevField1ActionPerformed
        // TODO add your handling code here:
        tblMain.setColumnSelectionInterval(tblMain.getSelectedColumn() - 1, tblMain.getSelectedColumn() - 1);
        ((PBCSAdmin) this.getParent()).dlManager.getAcceptRejectItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn(), tblMain.getColumnCount());
        //((PBCSAdmin) this.getParent()).dlManager.saveFindReplaceItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn());
        populateJTable(false);
        moveSelectionMainTbl();
    }//GEN-LAST:event_btnPrevField1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //((DefaultTableModel) tblAccRej.getModel()).addRow(new Object[]{ "", "", "","", false});
        populateJTable(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        ((PBCSAdmin) this.getParent()).dlManager.saveAcceptRejectItems(tblMain.getColumnModel().getColumn(tblMain.getSelectedColumn()).getHeaderValue().toString(), tblAccRej, tblMain.getSelectedColumn());
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        try {
            ((DefaultTableModel) tblAccRej.getModel()).removeRow(tblAccRej.getSelectedRow());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.getParent(), "Please select a row to delete");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    public JTable getAcceptRejectTable(){
        return tblAccRej;
    }
    
    private void populateJTable(Boolean bAddRow)
    {
        if (bAddRow) {
            ((DefaultTableModel) tblAccRej.getModel()).addRow(new Object[]{ "", "", "","", false});
        }
        TableColumn colAccRej = tblAccRej.getColumnModel().getColumn(0);
        TableColumn colType = tblAccRej.getColumnModel().getColumn(1);
        TableColumn colCond = tblAccRej.getColumnModel().getColumn(3);
        //TableColumn colCase = tblAccRej.getColumnModel().getColumn(4);
 
        
        JComboBox cbAccRej = new JComboBox();
        cbAccRej.addItem(pbcsConstants.AR_ACCEPT);
        cbAccRej.addItem(pbcsConstants.AR_REJECT);
        colAccRej.setCellEditor(new DefaultCellEditor(cbAccRej));
        
        JComboBox cbType = new JComboBox();
        cbType.addItem(pbcsConstants.AR_STRING);
        cbType.addItem(pbcsConstants.AR_NUMBER);
        colType.setCellEditor(new DefaultCellEditor(cbType));
        
        JComboBox cbCond = new JComboBox();
        //JCheckBox cbxCase = new JCheckBox();
        //cbxCase.setEnabled(false);
        
        cbType.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                cbCond.removeAllItems();
                cbCond.addItem(pbcsConstants.AR_EQUALS);
                cbCond.addItem(pbcsConstants.AR_NOT_EQUALS);
                
                if (cbType.getSelectedIndex() != -1){
                    
                    if (cbType.getSelectedItem().equals(pbcsConstants.AR_STRING)){
                        cbCond.addItem(pbcsConstants.AR_CONTAINS);
                        cbCond.addItem(pbcsConstants.AR_NOT_CONTAINS);
                        //cbxCase.setEnabled(true);
                        
                    } else {
                        cbCond.addItem(pbcsConstants.AR_GREATER_THAN);
                        cbCond.addItem(pbcsConstants.AR_GREATER_THAN_EQUAL);
                        cbCond.addItem(pbcsConstants.AR_LESS_THAN);
                        cbCond.addItem(pbcsConstants.AR_LESS_THAN_EQUAL);
                        //cbxCase.setEnabled(false);
                    }
                }
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        
        
        colCond.setCellEditor(new DefaultCellEditor(cbCond));
        //colCase.setCellEditor(new DefaultCellEditor(cbxCase));
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AcceptReject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AcceptReject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AcceptReject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AcceptReject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AcceptReject dialog = new AcceptReject(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgAndOr;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNextField;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnPrevField1;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCol;
    private javax.swing.JPanel pnlAndOr;
    private javax.swing.JRadioButton rblAnd;
    private javax.swing.JRadioButton rblOr;
    private javax.swing.JTable tblAccRej;
    // End of variables declaration//GEN-END:variables
}
